name: Maven Package

on:
  push:
    branches: ["master"]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
          MYSQL_DATABASE: ${{ secrets.MYSQL_DATABASE }}
          MYSQL_USER: user
          MYSQL_PASSWORD: ${{ secrets.MYSQL_USER_PASSWORD }}
        options: >-
          --health-cmd "mysqladmin ping -h localhost -u root --password=rootpassword"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 3306:3306

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    # Set up JDK 21
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        server-id: github
        settings-path: ${{ github.workspace }} # location for the settings.xml file

    # Wait for MySQL to be ready
    - name: Wait for MySQL to be ready
      run: |
        for i in {1..30}; do
            if mysqladmin ping -h localhost -u root --password=rootpassword; then
              echo "MySQL is ready"
              break
            fi
            echo "Waiting for MySQL..."
            sleep 1
        done

    # Build with Maven
    - name: Build with Maven
      run: mvn -B package --file pom.xml

    # # Log in to Docker Hub
    # - name: Log in to Docker Hub
    #   run: echo "${{ secrets.DOCKER_HUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin

    # # Set up Docker Buildx
    # - name: Set up Docker Buildx
    #   run: |
    #     docker buildx create --name multiarch-builder --use
    #     docker buildx inspect --bootstrap

    # # Build and push Docker image to Docker Hub
    # - name: Build and push Docker image to Docker Hub
    #   run: |
    #     docker buildx build --platform linux/amd64,linux/arm64 \
    #       -t ${{ env.DOCKER_HUB_REPO }}:latest \
    #       -t ${{ env.DOCKER_HUB_REPO }}:$GITHUB_SHA \
    #       --push .
